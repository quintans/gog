// Code generated by gog; DO NOT EDIT.
package example

type Dto1Builder struct {
	age   func(string) int
	name  string
	value int64
	sex   bool
	other *Dto2
}

func NewDto1Builder() Dto1 { return Dto1{} }

func (b *Dto1Builder) Age(age func(string) int) *Dto1Builder {
	b.age = age
	return b
}

func (b *Dto1Builder) Name(name string) *Dto1Builder {
	b.name = name
	return b
}

func (b *Dto1Builder) Value(value int64) *Dto1Builder {
	b.value = value
	return b
}

func (b *Dto1Builder) Sex(sex bool) *Dto1Builder {
	b.sex = sex
	return b
}

func (b *Dto1Builder) Other(other *Dto2) *Dto1Builder {
	b.other = other
	return b
}

func (b *Dto1Builder) Build() Dto1 {
	return Dto1{
		age:   b.age,
		name:  b.name,
		value: b.value,
		sex:   b.sex,
		other: b.other,
	}
}

func (src Dto1) ToBuild() Dto1Builder {
	return Dto1Builder{
		age:   src.age,
		name:  src.name,
		value: src.value,
		sex:   src.sex,
		other: src.other,
	}
}

func (t Dto1) Age() func(string) int {
	return t.age
}

func (t Dto1) Name() string {
	return t.name
}

func (t Dto1) Value() int64 {
	return t.value
}

func (t Dto1) Sex() bool {
	return t.sex
}

func (t Dto1) Other() *Dto2 {
	return t.other
}

type Dto2Builder struct {
	cenas []int
}

func NewDto2Builder() Dto2 { return Dto2{} }

func (b *Dto2Builder) Cenas(cenas []int) *Dto2Builder {
	b.cenas = cenas
	return b
}

func (b *Dto2Builder) Build() Dto2 {
	return Dto2{
		cenas: b.cenas,
	}
}

func (src Dto2) ToBuild() Dto2Builder {
	return Dto2Builder{
		cenas: src.cenas,
	}
}

func (t Dto2) Cenas() []int {
	return t.cenas
}
