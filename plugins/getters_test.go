package plugins

import (
	"fmt"
	"testing"

	"github.com/quintans/gog/config"
)

func TestGetter(t *testing.T) {
	tests := []struct {
		name string
		in   string
		out  string
	}{
		{
			"Getter_Pointer",
			`
package p

// gog:getters {"pointer":true}
type Foo struct {
	Bar
	name  string
	timeout int64
}
`,
			fmt.Sprintf(`// Code generated by gog; DO NOT EDIT.
// Version: %s
package p

// Generated by gog:getters

func (f *Foo) GetBar() Bar {
	return f.Bar
}

func (f *Foo) Name() string {
	return f.name
}

func (f *Foo) Timeout() int64 {
	return f.timeout
}
`, config.Version),
		},
		{
			"Getter_and_ignore",
			`
package p

// gog:getters
type Foo struct {
	name  string
	// gog:@ignore
	value []Bar
	timeout int64
}
`,
			fmt.Sprintf(`// Code generated by gog; DO NOT EDIT.
// Version: %s
package p

// Generated by gog:getters

func (f Foo) Name() string {
	return f.name
}

func (f Foo) Timeout() int64 {
	return f.timeout
}
`, config.Version),
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			run(t, tt.in, tt.out)
		})
	}
}
